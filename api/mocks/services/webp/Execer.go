// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/ainsleyclark/verbis/api/domain"
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// Execer is an autogenerated mock type for the Execer type
type Execer struct {
	mock.Mock
}

// Accepts provides a mock function with given fields: ctx
func (_m *Execer) Accepts(ctx *gin.Context) bool {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*gin.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Convert provides a mock function with given fields: path, compression
func (_m *Execer) Convert(path string, compression int) {
	_m.Called(path, compression)
}

// File provides a mock function with given fields: g, path, mime
func (_m *Execer) File(g *gin.Context, path string, mime domain.Mime) ([]byte, error) {
	ret := _m.Called(g, path, mime)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(*gin.Context, string, domain.Mime) []byte); ok {
		r0 = rf(g, path, mime)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gin.Context, string, domain.Mime) error); ok {
		r1 = rf(g, path, mime)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
