// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	stow "github.com/graymeta/stow"

	url "net/url"
)

// StowLocation is an autogenerated mock type for the StowLocation type
type StowLocation struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *StowLocation) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Container provides a mock function with given fields: id
func (_m *StowLocation) Container(id string) (stow.Container, error) {
	ret := _m.Called(id)

	var r0 stow.Container
	if rf, ok := ret.Get(0).(func(string) stow.Container); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(stow.Container)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Containers provides a mock function with given fields: prefix, cursor, count
func (_m *StowLocation) Containers(prefix string, cursor string, count int) ([]stow.Container, string, error) {
	ret := _m.Called(prefix, cursor, count)

	var r0 []stow.Container
	if rf, ok := ret.Get(0).(func(string, string, int) []stow.Container); ok {
		r0 = rf(prefix, cursor, count)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]stow.Container)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(string, string, int) string); ok {
		r1 = rf(prefix, cursor, count)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, string, int) error); ok {
		r2 = rf(prefix, cursor, count)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// CreateContainer provides a mock function with given fields: name
func (_m *StowLocation) CreateContainer(name string) (stow.Container, error) {
	ret := _m.Called(name)

	var r0 stow.Container
	if rf, ok := ret.Get(0).(func(string) stow.Container); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(stow.Container)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ItemByURL provides a mock function with given fields: _a0
func (_m *StowLocation) ItemByURL(_a0 *url.URL) (stow.Item, error) {
	ret := _m.Called(_a0)

	var r0 stow.Item
	if rf, ok := ret.Get(0).(func(*url.URL) stow.Item); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(stow.Item)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*url.URL) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveContainer provides a mock function with given fields: id
func (_m *StowLocation) RemoveContainer(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
