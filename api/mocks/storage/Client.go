// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/ainsleyclark/verbis/api/domain"
	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Delete provides a mock function with given fields: id
func (_m *Client) Delete(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Exists provides a mock function with given fields: name
func (_m *Client) Exists(name string) bool {
	ret := _m.Called(name)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// FindByURL provides a mock function with given fields: _a0
func (_m *Client) FindByURL(_a0 url.URL) ([]byte, domain.File, error) {
	ret := _m.Called(_a0)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(url.URL) []byte); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 domain.File
	if rf, ok := ret.Get(1).(func(url.URL) domain.File); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(domain.File)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(url.URL) error); ok {
		r2 = rf(_a0)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ListBuckets provides a mock function with given fields:
func (_m *Client) ListBuckets() (domain.Buckets, error) {
	ret := _m.Called()

	var r0 domain.Buckets
	if rf, ok := ret.Get(0).(func() domain.Buckets); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Buckets)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetBucket provides a mock function with given fields: id
func (_m *Client) SetBucket(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetProvider provides a mock function with given fields: location
func (_m *Client) SetProvider(location domain.StorageProvider) error {
	ret := _m.Called(location)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.StorageProvider) error); ok {
		r0 = rf(location)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Upload provides a mock function with given fields: upload
func (_m *Client) Upload(upload domain.Upload) (domain.File, error) {
	ret := _m.Called(upload)

	var r0 domain.File
	if rf, ok := ret.Get(0).(func(domain.Upload) domain.File); ok {
		r0 = rf(upload)
	} else {
		r0 = ret.Get(0).(domain.File)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.Upload) error); ok {
		r1 = rf(upload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
