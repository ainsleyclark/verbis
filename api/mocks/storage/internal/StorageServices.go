// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/ainsleyclark/verbis/api/domain"

	mock "github.com/stretchr/testify/mock"

	stow "github.com/graymeta/stow"
)

// StorageServices is an autogenerated mock type for the StorageServices type
type StorageServices struct {
	mock.Mock
}

// Bucket provides a mock function with given fields: file
func (_m *StorageServices) Bucket(file domain.File) (stow.Container, error) {
	ret := _m.Called(file)

	var r0 stow.Container
	if rf, ok := ret.Get(0).(func(domain.File) stow.Container); ok {
		r0 = rf(file)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(stow.Container)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.File) error); ok {
		r1 = rf(file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Provider provides a mock function with given fields: provider
func (_m *StorageServices) Provider(provider domain.StorageProvider) (stow.Location, error) {
	ret := _m.Called(provider)

	var r0 stow.Location
	if rf, ok := ret.Get(0).(func(domain.StorageProvider) stow.Location); ok {
		r0 = rf(provider)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(stow.Location)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.StorageProvider) error); ok {
		r1 = rf(provider)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
