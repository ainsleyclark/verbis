// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/ainsleyclark/verbis/api/domain"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// FieldsRepository is an autogenerated mock type for the FieldsRepository type
type FieldsRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: f
func (_m *FieldsRepository) Create(f domain.PostField) (domain.PostField, error) {
	ret := _m.Called(f)

	var r0 domain.PostField
	if rf, ok := ret.Get(0).(func(domain.PostField) domain.PostField); ok {
		r0 = rf(f)
	} else {
		r0 = ret.Get(0).(domain.PostField)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.PostField) error); ok {
		r1 = rf(f)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Exists provides a mock function with given fields: postID, _a1, key, name
func (_m *FieldsRepository) Exists(postID int, _a1 uuid.UUID, key string, name string) bool {
	ret := _m.Called(postID, _a1, key, name)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int, uuid.UUID, string, string) bool); ok {
		r0 = rf(postID, _a1, key, name)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetByPost provides a mock function with given fields: postID
func (_m *FieldsRepository) GetByPost(postID int) (domain.PostFields, error) {
	ret := _m.Called(postID)

	var r0 domain.PostFields
	if rf, ok := ret.Get(0).(func(int) domain.PostFields); ok {
		r0 = rf(postID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.PostFields)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(postID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLayout provides a mock function with given fields: post
func (_m *FieldsRepository) GetLayout(post domain.PostDatum) domain.FieldGroups {
	ret := _m.Called(post)

	var r0 domain.FieldGroups
	if rf, ok := ret.Get(0).(func(domain.PostDatum) domain.FieldGroups); ok {
		r0 = rf(post)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.FieldGroups)
		}
	}

	return r0
}

// Update provides a mock function with given fields: f
func (_m *FieldsRepository) Update(f domain.PostField) (domain.PostField, error) {
	ret := _m.Called(f)

	var r0 domain.PostField
	if rf, ok := ret.Get(0).(func(domain.PostField) domain.PostField); ok {
		r0 = rf(f)
	} else {
		r0 = ret.Get(0).(domain.PostField)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.PostField) error); ok {
		r1 = rf(f)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCreate provides a mock function with given fields: postID, f
func (_m *FieldsRepository) UpdateCreate(postID int, f domain.PostFields) error {
	ret := _m.Called(postID, f)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, domain.PostFields) error); ok {
		r0 = rf(postID, f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
