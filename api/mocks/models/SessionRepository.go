// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/ainsleyclark/verbis/api/domain"
	mock "github.com/stretchr/testify/mock"
)

// SessionRepository is an autogenerated mock type for the SessionRepository type
type SessionRepository struct {
	mock.Mock
}

// Check provides a mock function with given fields: userId
func (_m *SessionRepository) Check(userId int) error {
	ret := _m.Called(userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Create provides a mock function with given fields: id, email
func (_m *SessionRepository) Create(id int, email string) (string, error) {
	ret := _m.Called(id, email)

	var r0 string
	if rf, ok := ret.Get(0).(func(int, string) string); ok {
		r0 = rf(id, email)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, string) error); ok {
		r1 = rf(id, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: userId
func (_m *SessionRepository) Delete(userId int) error {
	ret := _m.Called(userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByKey provides a mock function with given fields: sessionKey
func (_m *SessionRepository) GetByKey(sessionKey string) (*domain.UserSession, error) {
	ret := _m.Called(sessionKey)

	var r0 *domain.UserSession
	if rf, ok := ret.Get(0).(func(string) *domain.UserSession); ok {
		r0 = rf(sessionKey)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.UserSession)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(sessionKey)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Has provides a mock function with given fields: userId
func (_m *SessionRepository) Has(userId int) bool {
	ret := _m.Called(userId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int) bool); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Update provides a mock function with given fields: sessionKey
func (_m *SessionRepository) Update(sessionKey string) error {
	ret := _m.Called(sessionKey)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(sessionKey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
